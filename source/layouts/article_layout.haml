:ruby
  site_url = data.site.url
  site_desc = data.site.description
  site_photo = data.site.facebook_og_image_url

  article_title = current_article.data.title
  article_author = current_article.data.author
  article_date = current_article.date
  article_image = current_article.data.image.to_s
  article_image_lg = current_article.data.image_lg.to_s
  article_caption = current_article.data.caption.to_s

  og_url = site_url + current_page.url
  og_desc = article_og_desc_for(current_article, site_desc)
  og_article_image = site_url + image_path(article_image)
  og_default_image = site_url + image_path(site_photo)

= wrap_layout :layout do
  - content_for :meta_desc do
    = tag "meta", name: "description", content: article_title

  - content_for :og_tags do
    = tag "meta", property: "og:url", content: og_url
    = tag "meta", property: "og:type", content: "article"
    = tag "meta", property: "og:title", content: article_title
    = tag "meta", property: "og:description", content: og_desc

    - if !article_image.blank?
      = tag "meta", property: "og:image", content: og_article_image
    - else
      = tag "meta", property: "og:image", content: og_default_image

  %article.article
    %section.article-container
      .article-title
        %h1= article_title

      .article-meta
        - if article_author
          .meta-author
            = social_link_for(article_author)

        %time.meta-date{ datetime: "#{article_date}" }
          = article_date.strftime("%b %d, %Y")

    - unless article_image.blank?
      %section.article-container-wide
        .hero-image
          - if !article_image_lg.blank?
            = link_to "/assets/images/" + article_image_lg do
              = image_tag article_image
          - else
            = image_tag article_image
          - unless article_caption.blank?
            .hero-image__caption
              %p.caption-text= article_caption

    %section.article-container
      .article-body
        = yield
